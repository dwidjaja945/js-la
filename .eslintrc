{
    "env": {
        "node": true,
        "es6": true,
        "mocha": true,
        "browser": true,
        "jquery": true,
        "jest": true
    },
    "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "airbnb",
        "plugin:jsx-a11y/recommended"
    ],
    "settings": {
        "import/resolver": {
            "webpack": {
                "config": "./config/webpack.shared.js"
            }
        }
    },
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "./tsconfig.json",
        "tsconfigRootDir": "./",
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 11,
        "sourceType": "module"
    },
    "plugins": [
        "react",
        "import",
        "jsx-a11y",
        "react-hooks",
        "@typescript-eslint"
    ],
    "rules": {
        "no-plusplus": "off",
        "react/prop-types": "off",
        "indent": [
            "error",
            4
        ],
        "react/jsx-indent": [
            "error",
            4
        ],
        "react/jsx-filename-extension": [
            2,
            {
                "extensions": [
                    ".js",
                    ".jsx",
                    ".ts",
                    ".tsx"
                ]
            }
        ],
        "import/extensions": [
            "error",
            "never",
            {
                "scss": "always",
                "json": "always",
                "css": "always",
                "png": "always"
            }
        ],
        "react/destructuring-assignment": "off",
        "class-methods-use-this": "off",
        "import/prefer-default-export": "off",
        "implicit-arrow-linebreak": "off",
        "react/jsx-indent-props": [
            "error",
            4
        ],
        "react/jsx-props-no-spreading": "off",
        "no-restricted-syntax": [
            "error",
            {
                "selector": "LabeledStatement",
                "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
            },
            {
                "selector": "WithStatement",
                "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
            }
        ],
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/no-unsafe-assignment": "warn",
        "consistent-return": "off",
        "react/require-default-props": "off"
    }
}